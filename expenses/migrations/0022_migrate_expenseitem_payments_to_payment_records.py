# Generated by Django 5.2.1 on 2025-06-07 09:45

from django.db import migrations


def migrate_expenseitem_payments_to_payment_records(apps, schema_editor):
    """
    Migrate existing ExpenseItem payment data to Payment records.
    Only creates Payment records for ExpenseItems that have payment data.
    """
    ExpenseItem = apps.get_model('expenses', 'ExpenseItem')
    Payment = apps.get_model('expenses', 'Payment')
    
    # Find all ExpenseItems that have payment information
    paid_expense_items = ExpenseItem.objects.filter(
        payment_date__isnull=False,
        status='paid'
    )
    
    payment_records_created = 0
    
    for expense_item in paid_expense_items:
        # Create a Payment record from existing ExpenseItem payment data
        Payment.objects.create(
            expense_item=expense_item,
            amount=expense_item.amount,  # Full amount was paid in old system
            payment_date=expense_item.payment_date,
            payment_method=expense_item.payment_method,
            payment_id=expense_item.payment_id,
        )
        payment_records_created += 1
    
    print(f"Created {payment_records_created} Payment records from existing ExpenseItem data")


def reverse_migration(apps, schema_editor):
    """
    Reverse migration: Delete all Payment records.
    Note: This will lose payment history data if run.
    """
    Payment = apps.get_model('expenses', 'Payment')
    count = Payment.objects.count()
    Payment.objects.all().delete()
    print(f"Deleted {count} Payment records")


class Migration(migrations.Migration):

    dependencies = [
        ("expenses", "0021_create_payment_model"),
    ]

    operations = [
        migrations.RunPython(
            migrate_expenseitem_payments_to_payment_records,
            reverse_migration,
        ),
    ]
